// Cian Dicker-Hughes
// G00415413@atu.ie
package ie.atu.sw;

import java.util.*;
import java.io.*;

/**
 * 
 * @author Cian Dicker-Hughes
 * @version 1.0
 * @since 1.8
 *
 *The Google1000 Class is where the file is load
 *in the ConcurrentHashMap and check Similarity of the Word 
 *Embedding of this program. 
 *
 */

public class Google1000 {
	private Map<String, double[]> embeddings = new HashMap<>();

	
	
	// load the file to the map
		public void load() {
		    embeddings.clear();
		    System.out.println("Loading embeddings from file: " + dictionaryFile);
		    try (var br = new BufferedReader(new InputStreamReader(new FileInputStream(dictionaryFile)))) {
		        String line;
		        while ((line = br.readLine()) != null) {
		            line = line.trim();
		            String[] parts = line.split(",\\s*");
		            String word = parts[0];
		            double[] embedding = Arrays.stream(parts, 1, parts.length).mapToDouble(Double::parseDouble).toArray();
		            embeddings.put(word, embedding);
		        }
		    } catch (IOException e) {
		        System.err.println("[ERROR] Encountered a problem reading the file: " + e.getMessage());
		        if (dictionaryFile.equals("word-embeddings.txt")) {
		            System.err.println("word-embeddings.txt file not found.");
		        } 
		        else {
		            System.out.println("Reverting to default file: word-embeddings.txt");
		            dictionaryFile = "word-embeddings.txt";
		            load(); // Reload using default file
		        }
		    }
		}
}
